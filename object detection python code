import numpy as np
import cv2
from matplotlib import pyplot as plt
img = cv2.imread('ak4.jpeg')
img1=cv2.resize(img,(500,500))
cv2.imshow('actual',img1)
img=cv2.cvtColor(img1,cv2.COLOR_BGR2GRAY)
sigma=0
v = np.median(img)
lower = int(max(0, (1.0 - sigma) * v))
upper = int(min(255, (1.0 + sigma) * v))
print(lower)
print(upper)
edges=cv2.Canny(img, 30, 200)
kernel=np.ones((8,8),np.uint8)
#closing=edges
#closing=cv2.morphologyEx(edges, cv2.MORPH_CLOSE,kernel)
closing=cv2.dilate(edges,kernel,iterations=1)
#cv2.imshow('edges',closing)
#edges=cv2.Canny(img, lower, upper)
ret,thresh=cv2.threshold(closing,lower,upper,0)
contours,hierarchy= cv2.findContours(thresh,cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE)
i=0

for cnt in contours:
    area = cv2.contourArea(cnt)
    if area>500:
        epsilon = 0.1*cv2.arcLength(cnt,True)
        #approx = cv2.approxPolyDP(cnt,epsilon,True)
        hull = cv2.convexHull(cnt)
        approx = cv2.approxPolyDP(hull,0.005*cv2.arcLength(hull,True),True)

        #cv2.drawContours(img1,[approx],-1,(0,255,0),3)
        #cv2.fillPoly(img1, pts =[approx], color=(255,255,255))
#or
        cv2.drawContours(img1,[cnt],-1,(0,255,0),3)
        cv2.fillPoly(img1, pts =[cnt], color=(255,255,255))
        
    i+=1
print(i)
cv2.imshow('ddd',img1)
cv2.imshow('sss',edges)
cv2.waitKey(0)
cv2.destroyAllWindows()
